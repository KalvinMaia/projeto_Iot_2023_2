#include <WiFi.h>
#include <WiFiClient.h>
#include <PubSubClient.h>
#include <DHT.h>

WiFiClient wifi_client;
PubSubClient mqtt_client(wifi_client);

const int sensorVib = 34;
const int sensorTemp = 4;
const int led = 2;

DHT dht(sensorTemp, DHT11);

const char* wifi_ssid = "IoT23-2";
const char* wifi_password = "testeIoT1";
int wifi_timeout = 100000;

const char* mqtt_broker = "io.adafruit.com";
const int mqtt_port = 1883;
int mqtt_timeout = 10000;

const char* mqtt_usernameAdafruitIO = "KalvinMaia10";
const char* mqtt_keyAdafruitIO = "aio_zSdj96TZkOtMRWZLunQBUGwqJLxS";

int valor = 0;

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA); //"station mode": permite o ESP32 ser um cliente da rede WiFi
  WiFi.begin(wifi_ssid, wifi_password);
  connectWiFi();
  mqtt_client.setServer(mqtt_broker, mqtt_port);

  dht.begin();

  pinMode(sensorVib, INPUT);
  pinMode(led, OUTPUT);

}

void loop() {
  int sensorValue = digitalRead(sensorVib);
  float temperatura = dht.readTemperature();
  int umidade = dht.readHumidity();
  
  Serial.println("Vibracao: "); // (mm/s) = sensorValue*1mV/3300mV
  Serial.println(sensorValue); // (mm/s) = sensorValue*1mV/3300mV
  Serial.println("Umidade: ");
  Serial.println(dht.readHumidity());
  Serial.println("Temperatura: ");
  Serial.println(dht.readTemperature());
  
  
  if (!mqtt_client.connected()) { // Se MQTT não estiver conectado
    connectMQTT();
  }

  if (mqtt_client.connected()) {
    
     
    mqtt_client.publish("KalvinMaia10/feeds/imd0902", String(temperatura).c_str());
    Serial.println("Publicou o dado: " + String(temperatura));
    
    mqtt_client.loop();

    mqtt_client.publish("KalvinMaia10/feeds/imd0903", String(umidade).c_str());
    Serial.println("Publicou o dado: " + String(umidade));
    
    mqtt_client.loop();

    mqtt_client.publish("KalvinMaia10/feeds/vibracao", String(sensorValue).c_str());
    Serial.println("Publicou o dado: " + String(sensorValue));
    
    mqtt_client.loop();
    delay(10000);
  }
  delay(500);
}

void connectWiFi() {
  Serial.print("Conectando à rede WiFi .. ");

  unsigned long tempoInicial = millis();
  while (WiFi.status() != WL_CONNECTED && (millis() - tempoInicial < wifi_timeout)) {
    Serial.print(".");
    delay(100);
  }
  Serial.println();

  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Conexão com WiFi falhou!");
  } else {
    Serial.print("Conectado com o IP: ");
    Serial.println(WiFi.localIP());
    digitalWrite(led, HIGH);
  }
}

void connectMQTT() {
  unsigned long tempoInicial = millis();
  while (!mqtt_client.connected() && (millis() - tempoInicial < mqtt_timeout)) {
    if (WiFi.status() != WL_CONNECTED) {
      connectWiFi();
    }
    Serial.print("Conectando ao MQTT Broker..");

    if (mqtt_client.connect("ESP32Client", mqtt_usernameAdafruitIO, mqtt_keyAdafruitIO)) {
      Serial.println();
      Serial.print("Conectado ao broker MQTT!");
    } else {
      Serial.println();
      Serial.print("Conexão com o broker MQTT falhou!");
      delay(500);
    }
  }
  Serial.println();
}
